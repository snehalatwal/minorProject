{"version":3,"sources":["components/AuthContextProvider.tsx","components/Login.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AuthContext","React","createContext","UserContext","undefined","AuthContextProvider","props","useState","auth","setAuth","user","setUser","useEffect","console","log","userId","Provider","value","children","Login","history","useHistory","email","setEmail","password","setPassword","useContext","to","src","type","onChange","e","target","onClick","preventDefault","push","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kLAEaA,EAAcC,IAAMC,cAAwE,EAAC,EAAO,eACpGC,EAAcF,IAAMC,cAA0F,MAACE,EAAW,eAO1HC,EAAmC,SAACC,GAC7C,MAAwBC,oBAAkB,GAA1C,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,qBAAxB,mBAAOG,EAAP,KAAaC,EAAb,KAYA,OAVAC,qBAAU,WACNC,QAAQC,IAAIJ,GACZ,OAAGA,QAAH,IAAGA,KAAMK,QACLF,QAAQC,IAAI,KACZL,GAAQ,IAERA,GAAQ,KAEd,CAACC,IAGC,cAACV,EAAYgB,SAAb,CAAsBC,MAAO,CAACT,EAAMC,GAApC,SACI,cAACN,EAAYa,SAAb,CAAsBC,MAAO,CAACP,EAAMC,GAApC,SACCL,EAAMY,c,eC+DJC,EAlFD,WACV,IAAMC,EAAUC,cAChB,EAA0Bd,qBAA1B,mBAAOe,EAAP,KAAcC,EAAd,KACA,EAAgChB,qBAAhC,mBAAOiB,EAAP,KAAiBC,EAAjB,KAGA,EAAwBC,qBAAW1B,GAAnC,mBACA,GADA,UACwB0B,qBAAWvB,IAAnC,mBAAaQ,GAAb,WAgDA,OACI,gCAEI,cAAC,IAAD,CAAMgB,GAAG,IAAT,SACI,qBAAKC,IAAI,2GAGb,gCACI,0DAEA,iCACG,+EACA,uBAAOX,MAAOK,EAAOO,KAAK,OAAOC,SAzB5B,SAACC,GACjBR,EAASQ,EAAEC,OAAOf,UA0BP,mEACA,uBAAOA,MAAOO,EAAUK,KAAK,WAAWC,SApBhC,SAACC,GACpBN,EAAYM,EAAEC,OAAOf,UAqBV,wBAAQY,KAAK,SAASI,QA3DtB,SAACF,GACZA,EAAEG,iBAGF,IAAMnB,EAAM,UAAMO,EAAN,YAAeE,GAC3Bb,EAAQ,CAACI,OAAQA,IAGjBK,EAAQe,KAAK,MAmDF,sCACA,wBAAQN,KAAK,SAASI,QA9CpB,SAACF,GACdA,EAAEG,iBAGF,IAAMnB,EAAM,UAAMO,EAAN,YAAeE,GAC3Bb,EAAQ,CAACI,OAAQA,IAGjBK,EAAQe,KAAK,MAsCF,gDCtDJC,MAtBf,WACE,MAAwBV,qBAAW1B,GAAnC,mBAAOQ,EAAP,KACA,GADA,KACwBkB,qBAAWvB,IAAnC,mBAAOO,EAAP,KACA,OADA,KAEE,8BAEA,cAAC,IAAD,UACI,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2B,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,8BACG7B,EAAI,wBAAaE,QAAb,IAAaA,OAAb,EAAaA,EAAMK,QAAW,iFCJlCuB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OAEP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACA,cAAC,EAAD,QAGFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.945e2bdc.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nexport const AuthContext = React.createContext<[boolean, React.Dispatch<React.SetStateAction<boolean>>]>([false, ()=>{}]);\r\nexport const UserContext = React.createContext<[User | undefined, React.Dispatch<React.SetStateAction<User | undefined>>]>([undefined, () => {}]);\r\n\r\n\r\ntype User = {\r\n    userId: string;\r\n} \r\n\r\nexport const AuthContextProvider:React.FC<{}> = (props) => {\r\n    const [auth, setAuth] = useState<boolean>(false);\r\n    const [user, setUser] = useState<User|undefined>();\r\n\r\n    useEffect(() => {\r\n        console.log(user);\r\n        if(user?.userId){\r\n            console.log(\"a\");\r\n            setAuth(true);\r\n        }else{\r\n            setAuth(false);\r\n        }\r\n    },[user]);\r\n\r\n    return (\r\n        <AuthContext.Provider value={[auth, setAuth]}>\r\n            <UserContext.Provider value={[user, setUser]}>\r\n            {props.children}\r\n            </UserContext.Provider>\r\n        </AuthContext.Provider>\r\n    )\r\n}","import React, {useContext, useState} from \"react\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport { AuthContext, UserContext } from \"./AuthContextProvider\";\r\n\r\n/**\r\n * ログイン、または会員登録処理を管理するコンポーネント\r\n * @returns \r\n */\r\nconst Login = () => {\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState<string>();\r\n    const [password, setPassword] = useState<string>();\r\n\r\n    // 以下の書き方で他のコンポーネントから共通の認証情報を取得できる\r\n    const [auth, setAuth] = useContext(AuthContext);\r\n    const [user, setUser] = useContext(UserContext);\r\n\r\n    /**\r\n     * サインインのリクエストをサーバーに送り、成功した場合TOPページにリダイレクト\r\n     * @param e \r\n     */\r\n    const signIn = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        e.preventDefault();\r\n\r\n        // 以下サーバーなしの擬似的なサインイン\r\n        const userId = `${email}_${password}`;\r\n        setUser({userId: userId});\r\n\r\n        // リダイレクト\r\n        history.push(\"/\");\r\n    }\r\n\r\n    /**\r\n     * 会員登録のリクエストをサーバーに送り、成功した場合TOPページにリダイレクト\r\n     */\r\n    const register = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        e.preventDefault();\r\n\r\n        // 以下サーバーなしの擬似的な会員登録\r\n        const userId = `${email}_${password}`;\r\n        setUser({userId: userId});\r\n\r\n        // リダイレクト\r\n        history.push(\"/\");\r\n    }\r\n\r\n    /**\r\n     * メールアドレスの変更ハンドラ\r\n     * @param e \r\n     */\r\n    const changeEmail = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    /**\r\n     * パスワードの変更ハンドラ\r\n     * @param e \r\n     */\r\n    const changePassword = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* ロゴ */}\r\n            <Link to=\"/\">\r\n                <img src='https://upload.wikimedia.org/wikipedia/commons/thumb/a/a9/Amazon_logo.svg/1024px-Amazon_logo.svg.png' />\r\n            </Link>\r\n\r\n            <div>\r\n                <h1>ログイン</h1>\r\n\r\n                <form>\r\n                   <label>メールアドレス</label>\r\n                   <input value={email} type=\"text\" onChange={changeEmail}></input>\r\n\r\n                   <label>パスワード</label>\r\n                   <input value={password} type=\"password\" onChange={changePassword}></input>\r\n\r\n                   <button type=\"submit\" onClick={signIn}>ログイン</button>\r\n                   <button type=\"submit\" onClick={register}>会員登録</button>\r\n                </form>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Login;","import React, { useContext } from 'react';\r\nimport { AuthContext, AuthContextProvider, UserContext } from './components/AuthContextProvider';\r\nimport Login from './components/Login';\r\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [auth, setAuth] = useContext(AuthContext);\r\n  const [user, setUser] = useContext(UserContext);\r\n  return (\r\n    <div>\r\n    \r\n    <Router>\r\n        <Switch>\r\n          <Route path=\"/login\">\r\n            <Login />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <div>\r\n              {auth ? `userId:${user?.userId}` : \"ログインされていません\"}\r\n            </div>\r\n          </Route>\r\n        </Switch>\r\n        </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { AuthContextProvider } from './components/AuthContextProvider';\r\nReactDOM.render(\r\n  \r\n  <React.StrictMode>\r\n    <AuthContextProvider>\r\n    <App />\r\n    </AuthContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}